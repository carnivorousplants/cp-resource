label_notrop_y = 9)
eb_lr_h_g <- my_plotting_g(ds,
xc = "e_breadth",
yc = "lat_range_sd_g",
gfc = "growthform",
binc = "bin",
gf_sel = "herb",
ttitle = "Global",
xxlab = 'Environmental breadth',
yylab = 'Latitudinal range',
plot_type = plot.type,
binning = bin.ning,
y_lim_s = 0,
y_lim_n = 10)
p <- cowplot::plot_grid(eb_lr_t_n,
eb_lr_t_s,
eb_lr_t_g,
eb_lr_h_n,
eb_lr_h_s,
eb_lr_h_g,
rel_widths = c(1, 1, 1.3,
1, 1, 1.3),
ncol = 3, align = "h",
labels = c("A", "B", "C",
"D", "E", "F"),
label_size = 25)
return(p)
}
# tropical = dashed
figure2 <- range(ds = niche_data,
#growthform = "herb",
plot.type = "p_mean",
bin.ning = "eq_points")
ggsave("./../tmp/figure2_v2.jpg",
width = 4000, height = 2000, units = "px")
# -------------------------------------------------------------------------------------------------------
# Figure 3: Environmental breadth and median latitude
allres_lmeb <- allres_lmeb %>% mutate(hemisphere = ifelse(hemisphere == "North", 1, -1))
lmebreadth <- function(ds,
#growthform = "tree",
plot.type = "p_mean",
bin.ning = "eq_points") {
### Trees
lm_eb_t_n <- my_plotting(ds %>% filter(hemisphere == 1),
xc = "lat_median_n",
yc = "e_breadth",
gfc = "growthform",
binc = "bin",
gf_sel = "tree",
ttitle = "Northern hemisphere",
xxlab = 'Latitudinal median',
yylab = 'Environmental breadth',
plot_type = plot.type,
binning = bin.ning,
y_lim_s = 0,
y_lim_n = 1,
x_lim = 70,
zonec = "zone_n",
label_trop = paste("Slope tropical:\n",
allres_lmeb %>%
filter(hemisphere == 1) %>%
filter(growthform == "tree") %>%
filter(zone == "tropical") %>%
.$val),
label_notrop = paste("Slope else:\n",
allres_lmeb %>%
filter(hemisphere == 1) %>%
filter(growthform == "tree") %>%
filter(zone == "else") %>%
.$val),
label_trop_x = 7,
label_trop_y = 0.9,
label_notrop_x = 35,
label_notrop_y = 0.9)
lm_eb_t_s <- my_plotting(ds %>% filter(hemisphere == -1),
xc = "lat_median_s",
yc = "e_breadth",
gfc = "growthform",
binc = "bin",
gf_sel = "tree",
ttitle = "Southern hemisphere",
xxlab = 'Latitudinal median',
yylab = 'Environmental breadth',
plot_type = plot.type,
binning = bin.ning,
y_lim_s = 0,
y_lim_n = 1,
x_lim = 70,
zonec = "zone_s",
label_trop = paste("Slope tropical:\n",
allres_lmeb %>%
filter(hemisphere == -1) %>%
filter(growthform == "tree") %>%
filter(zone == "tropical") %>%
.$val),
label_notrop = paste("Slope else:\n",
allres_lmeb %>%
filter(hemisphere == -1) %>%
filter(growthform == "tree") %>%
filter(zone == "else") %>%
.$val),
label_trop_x = 7,
label_trop_y = 0.9,
label_notrop_x = 35,
label_notrop_y = 0.9)
lm_eb_t_g <- my_plotting_g(ds,
xc = "lat_median_g",
yc = "e_breadth",
gfc = "growthform",
binc = "bin",
gf_sel = "tree",
ttitle = "Global",
xxlab = 'Latitudinal median',
yylab = 'Environmental breadth',
plot_type = plot.type,
binning = bin.ning,
y_lim_s = 0,
y_lim_n = 1)
### Herbs
lm_eb_h_n <- my_plotting(ds %>% filter(hemisphere == 1),
xc = "lat_median_n",
yc = "e_breadth",
gfc = "growthform",
binc = "bin",
gf_sel = "herb",
ttitle = "Northern hemisphere",
xxlab = 'Latitudinal median',
yylab = 'Environmental breadth',
plot_type = plot.type,
binning = bin.ning,
y_lim_s = 0,
y_lim_n = 1,
x_lim = 70,
zonec = "zone_n",
label_trop = paste("Slope tropical:\n",
allres_lmeb %>%
filter(hemisphere == 1) %>%
filter(growthform == "herb") %>%
filter(zone == "tropical") %>%
.$val),
label_notrop = paste("Slope else:\n",
allres_lmeb %>%
filter(hemisphere == 1) %>%
filter(growthform == "herb") %>%
filter(zone == "else") %>%
.$val),
label_trop_x = 7,
label_trop_y = 0.9,
label_notrop_x = 35,
label_notrop_y = 0.9)
lm_eb_h_s <- my_plotting(ds %>% filter(hemisphere == -1),
xc = "lat_median_s",
yc = "e_breadth",
gfc = "growthform",
binc = "bin",
gf_sel = "herb",
ttitle = "Southern hemisphere",
xxlab = 'Latitudinal median',
yylab = 'Environmental breadth',
plot_type = plot.type,
binning = bin.ning,
y_lim_s = 0,
y_lim_n = 1,
x_lim = 70,
zonec = "zone_s",
label_trop = paste("Slope tropical:\n",
allres_lmeb %>%
filter(hemisphere == -1) %>%
filter(growthform == "herb") %>%
filter(zone == "tropical") %>%
.$val),
label_notrop = paste("Slope else:\n",
allres_lmeb %>%
filter(hemisphere == -1) %>%
filter(growthform == "herb") %>%
filter(zone == "else") %>%
.$val),
label_trop_x = 7,
label_trop_y = 0.9,
label_notrop_x = 35,
label_notrop_y = 0.9)
lm_eb_h_g <- my_plotting_g(ds,
xc = "lat_median_g",
yc = "e_breadth",
gfc = "growthform",
binc = "bin",
gf_sel = "herb",
ttitle = "Global",
xxlab = 'Latitudinal median',
yylab = 'Environmental breadth',
plot_type = plot.type,
binning = bin.ning,
y_lim_s = 0,
y_lim_n = 1)
p <- cowplot::plot_grid(lm_eb_t_n,
lm_eb_t_s,
lm_eb_t_g,
lm_eb_h_n,
lm_eb_h_s,
lm_eb_h_g,
rel_widths = c(1, 1, 1.3,
1, 1, 1.3),
ncol = 3, align = "h",
labels = c("A", "B", "C",
"D", "E", "F"),
label_size = 25)
return(p)
}
# tropical = dashed
figure3 <- lmebreadth(ds = niche_data,
#growthform = "herb",
plot.type = "p_mean",
bin.ning = "eq_points")
ggsave("./../tmp/figure3_v2.jpg",
width = 4000, height = 2000, units = "px")
library(leaflet)
library(dplyr)
library(tidyr)
library(ggplot2)
library(DT)
library(scales)
library(tidyverse)
library(sf)
setwd("/Users/marco/GitHub/cp-resource/R_files/")
### Reading in the world shapefile
world_adm <- rgdal::readOGR("./data/ADM_2.shp")
l2 <- sf::st_read("./data/ADM_2.shp")
#------------------------------------------------------------------------------
### Importing and cleaning Sarracenia distriburion data
get_counties <- function(occurrences_df,
world_shapefile) {
# Remove points that are located in the ocean
occs_to_clean <- sp::SpatialPointsDataFrame(coords = occurrences_df %>% dplyr::select(decimalLongitude, decimalLatitude),
data = occurrences_df) ##check columns for long/lat
raster::crs(occs_to_clean) <- raster::crs(world_shapefile)
ovr <- sp::over(occs_to_clean, world_shapefile) %>%###overlay world and points
dplyr::select("COUNTRY", "NAME_1", "NAME_2", "TYPE_2", "ENGTYPE_2")
cleaned_ds <- cbind(occurrences_df, ovr) %>%
dplyr::select(genus, species, subspecies, county, NAME_2, state, NAME_1, country, COUNTRY, everything()) %>%
mutate(NAME_2 = ifelse(is.na(NAME_2), county, NAME_2)) %>%
mutate(NAME_1 = ifelse(is.na(NAME_1), state, NAME_1)) %>%
mutate(COUNTRY = ifelse(is.na(COUNTRY), country, COUNTRY)) %>%
arrange(genus, species, subspecies, NAME_2, NAME_1, COUNTRY, elevation, elevationAccuracy, .keep_all = TRUE) %>%
distinct(genus, species, subspecies, NAME_2, NAME_1, COUNTRY, .keep_all = TRUE) %>%
dplyr::select(-county, -state, -country) %>%
rename(county = NAME_2) %>%
rename(state = NAME_1) %>%
rename(country = COUNTRY)
return(cleaned_ds)
}
# Importing information about the native Sarracenia counties
native <- read_csv("./plant_lists/sarracenia_native.csv") %>%
filter(!str_detect(taxon_name, "Ã—")) %>%
mutate(taxon_name = gsub(" subsp.", "", taxon_name))
# sarracenia is a dataset including the native Sarracenia counties
sarracenia <- read.csv("./plant_lists/sarracenia_withCounties.csv") %>%
mutate(sciname = verbatimScientificName) %>%
mutate(verbatimScientificName = as.character(paste(verbatimScientificName))) %>%
rename(subspecies = infraspecificEpithet) %>%
merge(., native, by.x = c("sciname", "state"), by.y = c("taxon_name", "area")) %>%
filter(!is.na(county)) %>%
dplyr::select("gbifID", "verbatimScientificName", "county", "state", "country", "elevation", "elevationAccuracy",
"decimalLatitude", "decimalLongitude", "coordinateUncertaintyInMeters", "year", "scientificName") %>%
filter(!verbatimScientificName == "Sarracenia") %>%
mutate(source = "3_distribution") %>%
mutate(county = str_remove_all(county, pattern = " County")) %>%
separate(verbatimScientificName, c("genus", "species", "subspecies")) %>%
mutate(subspecies = ifelse(scientificName == "Sarracenia rubra Walter", "rubra", subspecies)) %>%
mutate(subspecies = ifelse(scientificName == "Sarracenia purpurea L.", "purpurea", subspecies)) %>%
mutate(subspecies = ifelse(scientificName == "Sarracenia alabamensis F.W. & R.B.Case", "alabamensis", subspecies)) %>%
mutate(subspecies = ifelse(scientificName == "Sarracenia jonesii Wherry", "jonesii", subspecies)) %>%
mutate(species = ifelse(scientificName == "Sarracenia jonesii Wherry", "rubra", species)) %>%
mutate(species = ifelse(scientificName == "Sarracenia alabamensis F.W. & R.B.Case", "rubra", species)) %>%
mutate(species = ifelse(scientificName == "Sarracenia alabamensis subsp. wherryi Case & Case", "rubra", species)) %>%
get_counties(occurrences_df = .,
world_shapefile = world_adm)
# Importing the Sarracenia I already have
my_plants <- read_csv("./plant_lists/Sarracenia_list.csv") %>% mutate(source = "1_mine")
# Importing the Sarracenia I know where to get
to_acquire <- read_csv("./plant_lists/to_acquire.csv")
# Merging the datasets
sarracenia_all_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
dplyr::select(genus, species, subspecies, country, state, county, source, everything()) %>%
mutate(scientificName = paste(genus, species)) %>%
mutate(link_county = paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)
) %>%
mutate(link_clone = paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/profiles/", code, sep = "")
) %>%
mutate(link_species = paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/profiles/", code, sep = "")
) %>%
mutate(img_url = paste0(paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/maps/img/Sarracenia", species, subspecies, country, state, county, sep = "_"), ".png") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)
) %>%
mutate(cloneNameLink = ifelse(source == "1_mine", paste0(paste('<a target="_parent" href=', .$link_clone, '>', paste(.$code, sep = ""), ' </a>', sep = ""), sep = ""), "")
) %>%
mutate(sciNameLink = ifelse(paste0(paste('<a target="_parent" href=', .$link_species, '>', paste(.$scientificName, sep = ""), ' </a>', sep = ""), sep = ""), "")
)
sarracenia_df <- sarracenia_all_df %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
filter(!is.na(county))
# You can find more info about the cool DT::datatable under "https://rstudio.github.io/DT/"
(t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(cloneNameLink, scientificName, subspecies, variety, county, state, country, source, year, old_code, pot1_code, pot2_code, comment, supplyer) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
class = "display nowrap",
escape = F,
colnames = c('code' = 'cloneNameLink'),
rownames = FALSE))
# You can find more info about the cool DT::datatable under "https://rstudio.github.io/DT/"
(t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(cloneNameLink, scientificName, subspecies, variety, county, state, country, source, year, old_code, pot1_code, pot2_code, comment, supplyer) %>%
filter(source == "1_mine") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
class = "display nowrap",
escape = F,
colnames = c('code' = 'cloneNameLink'),
rownames = FALSE))
htmltools::save_html(t, file="species.html")
(t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(cloneNameLink, scientificName, subspecies, variety, county, state, country, source, year, old_code, pot1_code, pot2_code, comment, supplyer) %>%
filter(source == "1_mine") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
class = "display nowrap",
escape = F,
colnames = c('code' = 'cloneNameLink'),
rownames = FALSE))
htmltools::save_html(t, file="species.html")
# You can find more info about the cool DT::datatable under "https://rstudio.github.io/DT/"
(t <- DT::datatable(sarracenia_all_df %>%
filter(source == "1_mine") %>%
dplyr::select(cloneNameLink, scientificName, subspecies, variety, county, state, country, source, year, old_code, pot1_code, pot2_code, comment, supplyer) %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
class = "display nowrap",
escape = F,
colnames = c('code' = 'cloneNameLink'),
rownames = FALSE))
# You can find more info about the cool DT::datatable under "https://rstudio.github.io/DT/"
(t <- DT::datatable(sarracenia_all_df %>%
filter(source == "1_mine") %>%
dplyr::select(cloneNameLink, scientificName, subspecies, variety, county, state, country, year, old_code, pot1_code, pot2_code, comment, supplyer) %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
class = "display nowrap",
escape = F,
colnames = c('code' = 'cloneNameLink'),
rownames = FALSE))
htmltools::save_html(t, file="species.html")
?save_html
library(leaflet)
library(dplyr)
library(tidyr)
library(ggplot2)
library(DT)
library(scales)
library(tidyverse)
library(sf)
setwd("/Users/marco/GitHub/cp-resource/R_files/")
### Reading in the world shapefile
world_adm <- rgdal::readOGR("./data/ADM_2.shp")
sarracenia_all_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
dplyr::select(genus, species, subspecies, country, state, county, source, everything()) %>%
mutate(scientificName = paste(genus, species)) %>%
mutate(link_county = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)
) %>%
mutate(link_clone = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/", code, sep = "")
) %>%
mutate(link_species = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/", code, sep = "")
) %>%
mutate(img_url = paste0(paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/maps/img/Sarracenia", species, subspecies, country, state, county, sep = "_"), ".png") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)
) %>%
mutate(cloneNameLink = ifelse(source == "1_mine", paste0(paste('<a target="_parent" href=', .$link_clone, '>', paste(.$code, sep = ""), ' </a>', sep = ""), sep = ""), "")
) %>%
mutate(sciNameLink = ifelse(paste0(paste('<a target="_parent" href=', .$link_species, '>', paste(.$scientificName, sep = ""), ' </a>', sep = ""), sep = ""), "")
)
# Importing the Sarracenia I already have
my_plants <- read_csv("./plant_lists/Sarracenia_list.csv") %>%
mutate(source = "1_mine") %>%
rename(date = year)
# Importing the Sarracenia I already have
my_plants <- read_csv("./plant_lists/Sarracenia_list.csv") %>%
mutate(source = "1_mine")
# Importing the Sarracenia I know where to get
to_acquire <- read_csv("./plant_lists/to_acquire.csv")
# Merging the datasets
sarracenia_all_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
dplyr::select(genus, species, subspecies, country, state, county, source, everything()) %>%
mutate(scientificName = paste(genus, species)) %>%
mutate(link_county = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)
) %>%
mutate(link_clone = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/", code, sep = "")
) %>%
mutate(link_species = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/", code, sep = "")
) %>%
mutate(img_url = paste0(paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/maps/img/Sarracenia", species, subspecies, country, state, county, sep = "_"), ".png") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)
) %>%
mutate(cloneNameLink = ifelse(source == "1_mine", paste0(paste('<a target="_parent" href=', .$link_clone, '>', paste(.$code, sep = ""), ' </a>', sep = ""), sep = ""), "")
) %>%
mutate(sciNameLink = ifelse(paste0(paste('<a target="_parent" href=', .$link_species, '>', paste(.$scientificName, sep = ""), ' </a>', sep = ""), sep = ""), "")
)
# You can find more info about the cool DT::datatable under "https://rstudio.github.io/DT/"
(t <- DT::datatable(my_plants %>%
dplyr::select(cloneNameLink, scientificName, subspecies, variety, county, state, country, year, old_code, pot1_code, pot2_code, comment, supplyer) %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
class = "display nowrap",
escape = F,
colnames = c('code' = 'cloneNameLink'),
rownames = FALSE))
# Importing the Sarracenia I already have
my_plants <- read_csv("./plant_lists/Sarracenia_list.csv") %>%
mutate(source = "1_mine")
# Importing the Sarracenia I know where to get
to_acquire <- read_csv("./plant_lists/to_acquire.csv")
# Merging the datasets
sarracenia_all_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
dplyr::select(genus, species, subspecies, country, state, county, source, everything()) %>%
mutate(scientificName = paste(genus, species)) %>%
mutate(link_county = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)
) %>%
mutate(link_clone = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/", code, sep = "")
) %>%
mutate(link_species = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/", code, sep = "")
) %>%
mutate(img_url = paste0(paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/maps/img/Sarracenia", species, subspecies, country, state, county, sep = "_"), ".png") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)
) %>%
mutate(cloneNameLink = ifelse(source == "1_mine", paste0(paste('<a target="_parent" href=', .$link_clone, '>', paste(.$code, sep = ""), ' </a>', sep = ""), sep = ""), "")
) %>%
mutate(sciNameLink = ifelse(paste0(paste('<a target="_parent" href=', .$link_species, '>', paste(.$scientificName, sep = ""), ' </a>', sep = ""), sep = ""), "")
)
# Merging the datasets
sarracenia_all_df <- my_plants %>%
bind_rows(., to_acquire) %>%
#bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
dplyr::select(genus, species, subspecies, country, state, county, source, everything()) %>%
mutate(scientificName = paste(genus, species)) %>%
mutate(link_county = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)
) %>%
mutate(link_clone = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/", code, sep = "")
) %>%
mutate(link_species = paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/profiles/", code, sep = "")
) %>%
mutate(img_url = paste0(paste("https://carnivorousplants.github.io/cp-resource/sarracenia/assets/maps/img/Sarracenia", species, subspecies, country, state, county, sep = "_"), ".png") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)
) %>%
mutate(cloneNameLink = ifelse(source == "1_mine", paste0(paste('<a target="_parent" href=', .$link_clone, '>', paste(.$code, sep = ""), ' </a>', sep = ""), sep = ""), "")
) %>%
mutate(sciNameLink = ifelse(paste0(paste('<a target="_parent" href=', .$link_species, '>', paste(.$scientificName, sep = ""), ' </a>', sep = ""), sep = ""), "")
)
sarracenia_df <- sarracenia_all_df %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
filter(!is.na(county))
# You can find more info about the cool DT::datatable under "https://rstudio.github.io/DT/"
(t <- DT::datatable(sarracenia_all_df %>%
filter(source == "1_mine") %>%
dplyr::select(cloneNameLink, scientificName, subspecies, variety, county, state, country, year, old_code, pot1_code, pot2_code, comment, supplyer) %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
class = "display nowrap",
escape = F,
colnames = c('code' = 'cloneNameLink'),
rownames = FALSE))
# You can find more info about the cool DT::datatable under "https://rstudio.github.io/DT/"
(t <- DT::datatable(sarracenia_all_df %>%
filter(source == "1_mine") %>%
dplyr::select(cloneNameLink, scientificName, subspecies, variety, county, state, country, date, old_code, pot1_code, pot2_code, comment, supplyer) %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
class = "display nowrap",
escape = F,
colnames = c('code' = 'cloneNameLink'),
rownames = FALSE))
htmltools::save_html(t, file="species.html")
